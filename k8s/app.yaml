apiVersion: v1
kind: Namespace
metadata:
  name: snake
  labels:
    name: snake
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: snake-game
  namespace: snake
  labels:
    app: snake-game
spec:
  replicas: 2
  selector:
    matchLabels:
      app: snake-game
  template:
    metadata:
      labels:
        app: snake-game
    spec:
      containers:
        - name: snake
          image: "${SNAKE_IMAGE}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http
          env:
            - name: PORT
              value: "3000"
            - name: STORAGE_BACKEND
              valueFrom:
                configMapKeyRef:
                  name: snake-config
                  key: storage_backend
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: snake-config
                  key: region
            - name: S3_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: snake-config
                  key: s3_bucket
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: snake-secrets
                  key: database_url
          readinessProbe:
            httpGet:
              path: /readyz
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "500m"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: snake-game
  namespace: snake
  labels:
    app: snake-game
spec:
  selector:
    app: snake-game
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: snake-game
  namespace: snake
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: ${SNAKE_HOST}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: snake-game
                port:
                  number: 80
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: snake-game
  namespace: snake
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: snake-game
  minReplicas: 2
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: snake-config
  namespace: snake
data:
  region: ap-southeast-1
  storage_backend: s3
  s3_bucket: ""
---
apiVersion: v1
kind: Secret
metadata:
  name: snake-secrets
  namespace: snake
type: Opaque
stringData:
  database_url: ""
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: snake-game
  namespace: snake
  labels:
    release: monitoring
spec:
  selector:
    matchLabels:
      app: snake-game
  namespaceSelector:
    matchNames:
      - snake
  endpoints:
    - port: http
      path: /metrics
      interval: 15s


